#!/usr/bin/env python
# -*- coding: utf8 -*-

# search osm
# ErshKUS

import cgi, json, re, psycopg2, psycopg2.extras
import db_config
import api_config as conf
import re

if conf.isdebug:
  import datetime


def main():
  output={}
  output['ver']='0.7'
  if conf.isdebug:
    output['debug']={}
    output['debug']['test-timer']=[]
    output['debug']['test-timer'].append(str(datetime.datetime.now())+' - 1')


  getvalues=cgi.FieldStorage()
  get={}
  get['outCallback'] = getvalues.getfirst('callback','')

  print "Content-type: text/javascript; Charset=Utf-8\nAccess-Control-Allow-Origin: *\n" # debug
  #print "Content-type: application/json; Charset=Utf-8\nAccess-Control-Allow-Origin: *\n" # production

  get['q'] = unicode(getvalues.getfirst("q",""),'utf8') # строка поиска
  get['lat'] = float(getvalues.getfirst("lat","0")) # координаты куда смотрит пользователь
  get['lon'] = float(getvalues.getfirst("lon","0")) # координаты куда смотрит пользователь
  get['asis'] = bool(getvalues.getfirst("asis","1")) # не экранировать спецсимволы html при выводе результатов
  get['nolimit'] = bool(getvalues.getfirst("nolimit","")) # не ограничивать количество выводимых результатов поиска
  get['cnt'] = int(getvalues.getfirst("cnt","12")) # число выводимых результатов поиска
  get['st'] = unicode(getvalues.getfirst("st","")) # [all / addr / poi]  где ищем
  if get['st'] == "":
    get['st'] = unicode(getvalues.getfirst("stype","all")) # all / addr / poi (поддержка старого названия)
  output['in'] = get.copy()

  if not get['q']:
    output['error']="no query words, 'q' is empty"
    return

  output['search'] = get['q']
  if not get['asis']: # экранирование html спецсимволов
    output['search'] = output['search'].replace('&','&amp;')
    output['search'] = output['search'].replace('\"',"&quot;")
    output['search'] = output['search'].replace('\'','&#039;')
    output['search'] = output['search'].replace('<','&lt;')
    output['search'] = output['search'].replace('>','&gt;')

  output['find']=False
  output["matches"]=[]

  search_text=get['q']

  lat=0
  lon=0
  delimiters=";, :"

  for delimiter in delimiters:
    # Проверяем на соответствие координатам:
    if re.search("-*[0-9]+\.[0-9]{1}[0-9]* *"+delimiter+" *-*[0-9]+\.[0-9]{1}[0-9]*", search_text) is not None:
  	  lat=float(search_text.split(delimiter)[0])
  	  lon=float(search_text.split(delimiter)[1])
	  break

  if lat==0 and lon==0:
	  output['find']=False
  else:
	  output['find']=True
      # userPos:
	  count=1
	  # matches:
	  item={}
	  item["lon"]=lon
	  item["lat"]=lat
	  item["name"]=search_text
	  item["display_name"]="%f, %f" % (lat, lon)
	  item["full_name"]=""
	  item["id"]=1
	  item["osm_id"]=1
	  item["class"]="class"
	  
	  item["street_id"]=0
	  item["village_id"]=0
	  item["city_id"]=0
	  item["weight"]=2000
	  item["addr_type_id"]=70
	  item["country_id"]=0
	  item["district_id"]=0
	  item["this_poi"]=1
	  item["addr_type"]="poi"
	  item["operator"]=""
	  item["@geodist"]=7986888.5
	  item["region_id"]=68688198
	  output["matches"].append(item)

  print json.dumps(output)


if __name__ == '__main__':
  main()
